name: Cookbook Integration

on:
  issues:
    types: [closed]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  id-token: write
  pages: write

env:
  BASE_URL: /${{ github.event.repository.name }}
  GALLERY_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    if: >
      github.event_name != 'issues' ||
      (
        github.event_name == 'issues' &&
        github.event.action == 'closed' &&
        (github.actor == 'katharinastarzer21' || github.actor == 'koenifra')
      )

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          pip install pyyaml nbformat
          npm install -g mystmd

      - name: Clone base repository (HDA, HOOK, STACK)
        run: python scripts/clone_repo.py

      - name: Dump issue body to file
        run: echo "${{ github.event.issue.body }}" > issue_body.txt

      - name: Parse GitHub Issue and export env
        run: python scripts/parse_issue.py

      - name: Clone submitted repository into production/<root_path>
        run: |
          echo "Cloning $REPO_URL into production/$ROOT_PATH"
          git clone "$REPO_URL" temp_repo
          rm -rf temp_repo/.git
          mkdir -p "production/$ROOT_PATH"
          cp -r temp_repo/* "production/$ROOT_PATH/"
          rm -rf temp_repo
        env:
          REPO_URL: ${{ env.REPO_URL }}
          ROOT_PATH: ${{ env.ROOT_PATH }}

      - name: Generate gallery markdown files
        run: python scripts/generate_gallery_md.py

      - name: Generate keywords markdown files
        run: python scripts/gallery_keywords.py

      - name: Generate Buttons in index file
        run: python scripts/indexbutton.py

      - name: Generate myst.yml and TOC
        run: python scripts/build_myst_yml.py

      - name: Build MyST HTML site
        run: myst build --html

      - name: Prepare full_site folder
        run: |
          mkdir -p full_site
          cp -r _build/html/* full_site/

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: full_site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

      - name: Commit and push updated files
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add production/ galleries/ index.md myst.yml
          git commit -m "üîÅ Update site content after issue integration" || echo "No changes to commit"
          git push origin main

